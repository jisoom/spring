<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : .xml 파일은 여러개 생성되므로 이를 구별하는 용도임 -->
<mapper namespace="book">
	<!-- 
	insert 태그 : MyBatis에서 데이터 입력(insert)을 나타내는 태그
	id : 네임스페이스 안에서 SQL을 구분하는 유일한(Unique) 식별자 역할을 함
	parameterType : 쿼리에 적용할 파라미터 타입.(hashMap : Map타입)
	CDATA : 원시 문자열을 나타냄. 그 안에 있는 문자열은  <(작다, 크다 쓸때..) 등의 태그 문자를 태그로 인식하지 않게 됨
	hashMap : map => {"title" : "피터팬", "category" : "소설", "price" : 10000}
	map에 {"bookId" ,"1"} 추가
	 -->
	<insert id="insert" parameterType="hashMap">
		<selectKey order="BEFORE" keyProperty="bookId" resultType="int">
			SELECT NVL(MAX(BOOK_ID),0)+1 FROM BOOK
		</selectKey>
		<![CDATA[
			INSERT INTO BOOK(BOOK_ID, TITLE, CATEGORY, PRICE)
			VALUES(
		    #{bookId},
		    #{title},
		    #{category},
		    #{price}
			)
		]]>
	</insert>
	
	<!-- 책 상세 -->
	<select id="select_detail" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
			SELECT BOOK_ID AS bookId, TITLE, CATEGORY, PRICE 
			FROM BOOK 
			WHERE BOOK_ID = #{bookId}
		]]>
	</select>
	
	<!-- 책 수정  update 태그 : 수정쿼리(update)를 실행하는 마이바티스 태그-->
	<!-- map => {"TITLE" : "제리소여모험", "CATEGORY" : "전설", "PRICE" : "10000"} -->
	<update id="update" parameterType="hashMap">
	<![CDATA[
	UPDATE BOOK
	SET TITLE = #{title}, CATEGORY = #{category}, PRICE = #{price}
	WHERE BOOK_ID = #{bookId}
	]]>
	</update>
	
	<!-- 책 목록 -->
	<!-- parameterType : 조건으로 들어오는 파라미터 타입. keyword
		 resultType : SQL 실행 후 리턴되는 타입
		 WHERE 1=1 => 늘 참이다.
		 조건이 2개 이상일 경우 처음에 시작하는 조건은 where로 시작하고 두번째로 시작하는 조건은 and여야 함.
		 매번 첫번째 조건인지 검사하는 것은 번거롭기 때문에 무조건 where 1=1 을 써둔 후 나머지 조건들을 and로 이어 붙이는 것임
		 만약에 keyword가 있으면 if~if 안의 쿼리문이 데이터베이스 쿼리에 포함됨.
		 동적 쿼리(Dynamic Query) : 쿼리의 내용이 파라미터가 아니라 마이바티스 규칙에 의해 변경되는 것
		 CDATA를 닫는 위치 : 동적 쿼리 구문이 RAW 문자열로 취급하여 해석되지 않도록 하기 위함
	-->
	<select id="select_list" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT ROW_NUMBER() OVER (ORDER BY BOOK_ID DESC) RNUM
		,BOOK_ID AS bookId, TITLE, CATEGORY, PRICE
		FROM BOOK
		WHERE 1=1
	]]>
	<if test="keyword!=null and keyword != '' ">		
		AND TITLE LIKE '%' || #{keyword} ||'%' OR CATEGORY LIKE '%' || #{keyword} ||'%'
	</if>
	</select>
	
	<!-- 책 삭제 -->
	<delete id="delete" parameterType="hashMap">
		DELETE FROM BOOK
		WHERE BOOK_ID= #{bookId}
	</delete>
</mapper>